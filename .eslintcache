[{"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\index.js":"1","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\App.js":"2","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Loading.js":"3","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Coins.js":"4","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Coin.js":"5","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Globals.js":"6","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\UpDown.js":"7","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Context.js":"8","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\DomCoin.js":"9","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\pages\\Home.js":"10","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\pages\\Details.js":"11","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\DetailsChart.js":"12","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\CoinData.js":"13"},{"size":219,"mtime":1610200507386,"results":"14","hashOfConfig":"15"},{"size":477,"mtime":1610488949806,"results":"16","hashOfConfig":"15"},{"size":193,"mtime":1609708437956,"results":"17","hashOfConfig":"15"},{"size":1418,"mtime":1611441321376,"results":"18","hashOfConfig":"15"},{"size":963,"mtime":1610584327813,"results":"19","hashOfConfig":"15"},{"size":1480,"mtime":1610584254395,"results":"20","hashOfConfig":"15"},{"size":443,"mtime":1610584286494,"results":"21","hashOfConfig":"15"},{"size":711,"mtime":1610561556860,"results":"22","hashOfConfig":"15"},{"size":1677,"mtime":1610392221539,"results":"23","hashOfConfig":"15"},{"size":344,"mtime":1610469609695,"results":"24","hashOfConfig":"15"},{"size":1868,"mtime":1611339798991,"results":"25","hashOfConfig":"15"},{"size":4305,"mtime":1611340763493,"results":"26","hashOfConfig":"15"},{"size":549,"mtime":1611338280520,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"hgp7yx",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\index.js",[],["59","60"],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\App.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Loading.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Coins.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Coin.js",[],["61","62"],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Globals.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\UpDown.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\Context.js",["63"],"import React, { useContext, useState } from \"react\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nconst GlobalProvider = ({ children }) => {\r\n  const ApiUrl = \"https://api.coingecko.com/api/v3\";\r\n  const [list, setList] = useState([\r\n    \"bitcoin\",\r\n    \"ethereum\",\r\n    \"celo-gold\",\r\n    \"maker\",\r\n    \" ripple\",\r\n    \"bitcoin-cash\",\r\n    \"stellar\",\r\n    \"band-protocol\",\r\n    \"the-graph\",\r\n    \"compound-governance-token\",\r\n    \"litecoin\",\r\n  ]);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ ApiUrl, list }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(GlobalContext);\r\n};\r\nexport { GlobalContext, GlobalProvider };\r\n","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\DomCoin.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\pages\\Home.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\pages\\Details.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\DetailsChart.js",["64","65"],"import React, { useRef, useEffect, useState } from \"react\";\r\n// import Chartjs from \"chart.js\";\r\nimport { Line } from \"@reactchartjs/react-chart.js\";\r\nimport UpDown from \"./UpDown\";\r\n\r\nconst DetailsChart = ({ data }) => {\r\n  // const chartRef = useRef();\r\n  const { day, week, year, detail } = data;\r\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n  const determineTimeFormat = () => {\r\n    switch (timeFormat) {\r\n      case \"24h\":\r\n        return day;\r\n      case \"7d\":\r\n        return week;\r\n      case \"1y\":\r\n        return year;\r\n      default:\r\n        return day;\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (chartRef && chartRef.current && detail) {\r\n  //     const chartInstance = new Chartjs(chartRef.current, {\r\n  //       type: \"line\",\r\n  //       data: {\r\n  //         datasets: [\r\n  //           {\r\n  //             label: `${detail.name} price`,\r\n  //             data: determineTimeFormat(),\r\n  //             backgroundColor: \"white\",\r\n  //             borderColor: \"red\",\r\n  //             pointRadius: 1,\r\n  //             fill: false,\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       options: {\r\n  //         lineHeightAnnotation: {\r\n  //           always: true,\r\n  //           hover: true,\r\n  //           lineWeight: 1.5,\r\n  //         },\r\n\r\n  //         animation: {\r\n  //           duration: 2000,\r\n  //         },\r\n  //         maintainAspectRatio: true,\r\n  //         responsive: true,\r\n  //         scales: {\r\n  //           x: {\r\n  //             max: 5000,\r\n  //             min: 0,\r\n  //             type: \"category\",\r\n  //             labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n  //           },\r\n  //         },\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // });\r\n\r\n  const renderPrice = () => {\r\n    if (detail) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"details-wrapper-name\">\r\n              <img\r\n                className=\"details-icon\"\r\n                src={detail.image}\r\n                alt={detail.name}\r\n              />\r\n              <div className=\"details-name\">\r\n                <h1>{detail.name}</h1>\r\n                <h2>{detail.symbol.toUpperCase()} </h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"details-price-wrapper\">\r\n            <p className=\"details-price\">${detail.current_price.toFixed(2)}</p>\r\n            <UpDown\r\n              value={detail.price_change_percentage_24h.toFixed(2)}\r\n              classe={\"cryptos-chart__subtext\"}\r\n            ></UpDown>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const getDetailsName = () => {\r\n    if (detail) {\r\n      return `${detail.name} price`;\r\n    }\r\n  };\r\n  const chart = {\r\n    datasets: [\r\n      {\r\n        label: getDetailsName(),\r\n        data: determineTimeFormat(),\r\n        fill: false,\r\n        borderWidth: 2.5,\r\n        backgroundColor: \"rgb(255, 99, 132)\",\r\n        borderColor: \"rgba(255, 99, 132, 0.8)\",\r\n        pointRadius: 0,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"white\",\r\n        pointHoverBorderColor: \"white\",\r\n        pointHoverBorderWidth: 5,\r\n        pointRotation: 90,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          distribution: \"linear\",\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>{renderPrice()}</div>\r\n      {/* <div>\r\n        <canvas ref={chartRef} id=\"myChart\" width={400} height={400}></canvas>\r\n      </div> */}\r\n      <div>\r\n        <Line data={chart} options={options} height=\"450\" width=\"700\" />\r\n      </div>\r\n      <div className=\"chart-button mt-1\">\r\n        <button\r\n          onClick={() => setTimeFormat(\"24h\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          24h\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"7d\")}\r\n          className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n        >\r\n          7d\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"1y\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          1y\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DetailsChart;\r\n","C:\\Users\\sma\\Documents\\Projets\\reactjs\\bitcoin-vis\\src\\CoinData.js",["66"],"import React from \"react\";\r\n\r\nconst CoinData = ({ data }) => {\r\n  const { detail } = data;\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">hello</div>\r\n          <div className=\"col-md-4\">hello</div>\r\n          <div className=\"col-md-4\">hello</div>\r\n          <div className=\"col-md-4\">hello</div>\r\n          <div className=\"col-md-4\">hello</div>\r\n          <div className=\"col-md-4\">hello</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoinData;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":7,"column":16,"nodeType":"75","messageId":"76","endLine":7,"endColumn":23},{"ruleId":"73","severity":1,"message":"77","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":23},{"ruleId":"73","severity":1,"message":"78","line":1,"column":25,"nodeType":"75","messageId":"76","endLine":1,"endColumn":34},{"ruleId":"73","severity":1,"message":"79","line":4,"column":11,"nodeType":"75","messageId":"76","endLine":4,"endColumn":17},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"no-unused-vars","'setList' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'detail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]